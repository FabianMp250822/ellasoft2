rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSuperAdmin() {
      return request.auth != null && request.auth.token.superadmin == true;
    }

    function isOrganizationMember(orgId) {
      return request.auth != null && request.auth.token.organizationId == orgId;
    }
    
    // Superadmin can read/write anything
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // Organizations can only be read by superadmins (covered above).
    // The getOrganizations callable function handles this securely.
    match /organizations/{orgId} {
      allow read, write: if false; // Block direct client access
    }

    // Rules for collections that belong to an organization
    match /academicPeriods/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    match /gradingSystems/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    match /grades/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    match /subjects/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    
  }
}
