rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin of a specific organization
    function isOrganizationAdmin(organizationId) {
      return request.auth.token.admin == true && request.auth.token.organizationId == organizationId;
    }

    // Helper function to check if a user is a superadmin
    function isSuperAdmin() {
      return request.auth.token.superadmin == true;
    }

    // Helper function to check if a user belongs to an organization (generic member)
    function isOrganizationMember(organizationId) {
      return request.auth.token.organizationId == organizationId;
    }

    // Rules for organizations collection
    // Read: Any authenticated user can read (e.g., to list for a superadmin).
    // Specific read/list logic is handled by Cloud Functions with their own security.
    // Write: Only superadmins can create/update/delete organizations.
    match /organizations/{orgId} {
      allow read: if isSuperAdmin();
      allow write: if isSuperAdmin();
    }

    // Rules for organization-specific data
    // The pattern is the same for all these collections:
    // - read is allowed if the user is a member of the organization associated with the document.
    // - write is allowed if the user is an admin of the organization associated with the document.

    match /academicPeriods/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationAdmin(request.resource.data.organizationId);
    }

    match /gradingSystems/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationAdmin(request.resource.data.organizationId);
    }

    match /grades/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationAdmin(request.resource.data.organizationId);
    }
    
    match /subjects/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationAdmin(request.resource.data.organizationId);
    }

    // Add similar rules for other collections as they are created
    // e.g., /teachers, /students, etc.
  }
}
