rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSuperAdmin() {
      return request.auth.token.superadmin == true;
    }

    function isOrganizationMember(orgId) {
      return request.auth.token.organizationId == orgId;
    }

    match /organizations/{orgId} {
      allow read, write: if isSuperAdmin();
    }

    // Rules for collections associated with an organization
    match /academicPeriods/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }

    match /gradingSystems/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }

    match /grades/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }

    match /subjects/{docId} {
      allow read: if isOrganizationMember(resource.data.organizationId);
      allow write: if isOrganizationMember(request.resource.data.organizationId);
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
