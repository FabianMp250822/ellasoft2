rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // HELPER FUNCTIONS
    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && request.auth.token.superadmin == true;
    }
    
    function isOrganizationAdmin(orgId) {
      return isSignedIn() && request.auth.token.admin == true && request.auth.token.organizationId == orgId;
    }

    function isOrganizationMember(orgId) {
      return isSignedIn() && request.auth.token.organizationId == orgId;
    }
    
    function isResourceOwner(resource) {
      return request.auth.uid == resource.data.uid;
    }
    
    // Global rule: Super Admins have access to everything.
    match /{document=**} {
      allow read, write: if isSuperAdmin();
    }

    // ORGANIZATIONS
    match /organizations/{orgId} {
      // Admins can read their own organization's document.
      allow read: if isOrganizationAdmin(orgId);
      // Writes are handled by the global superadmin rule.
      allow write: if false; 
    }

    // USERS
    // Users are managed via Firebase Auth, direct writes to a users collection are restricted.
    match /users/{userId} {
        allow read, write: if false;
    }

    // TENANT-SPECIFIC DATA
    // Rules for collections that belong to a specific organization.
    match /academicPeriods/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    match /gradingSystems/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    match /grades/{docId} {
       allow read: if isOrganizationMember(resource.data.organizationId);
       allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
    match /subjects/{docId} {
       allow read: if isOrganizationMember(resource.data.organizationId);
       allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
     match /students/{docId} {
       allow read: if isOrganizationMember(resource.data.organizationId);
       allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
     match /teachers/{docId} {
       allow read: if isOrganizationMember(resource.data.organizationId);
       allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
     match /performanceIndicators/{docId} {
       allow read: if isOrganizationMember(resource.data.organizationId);
       allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
     match /academicLoads/{docId} {
       allow read: if isOrganizationMember(resource.data.organizationId);
       allow write: if isOrganizationMember(request.resource.data.organizationId);
    }
  }
}
