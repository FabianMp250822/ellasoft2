rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.superadmin == true || request.auth.token.superadmin == true;
    }

    function isOrganizationMember(orgId) {
      return request.auth != null && request.auth.token.organizationId == orgId;
    }

    match /organizations/{orgId} {
      // Superadmins can read all organizations.
      // Organization members can read their own organization document.
      allow read: if isSuperAdmin() || isOrganizationMember(orgId);
      
      // Only backend (Cloud Functions with admin SDK) should write to organizations.
      allow write: if false; 
    }

    match /academicPeriods/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        // Writes are handled by a secure Cloud Function
        allow write: if false;
    }

    match /gradingSystems/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        // Writes are handled by a secure Cloud Function
        allow write: if false;
    }

    match /grades/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        // Writes are handled by a secure Cloud Function
        allow write: if false;
    }

    match /groups/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        // Writes are handled by a secure Cloud Function
        allow write: if false;
    }
    
    match /gradesWithGroups/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
         // Writes are handled by a secure Cloud Function
        allow write: if false;
    }

    match /subjects/{docId} {
        allow read: if isOrganizationMember(resource.data.organizationId);
        // Writes are handled by a secure Cloud Function
        allow write: if false;
    }
    
    match /performanceIndicators/{docId} {
      // Allow members of the organization to read the indicators.
      allow read: if isOrganizationMember(resource.data.organizationId);
      // Writes are handled by a secure Cloud Function, so client write is disallowed.
      allow write: if false;
    }

    // Default deny all other collections
    match /{path=**}/documents/{document} {
      allow read, write: if false;
    }
  }
}
